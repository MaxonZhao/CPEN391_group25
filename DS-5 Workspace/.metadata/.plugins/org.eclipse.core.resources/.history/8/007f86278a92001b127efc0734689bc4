#include "serial.h"
#include "wifi.h"
#include <stdio.h>
#include <string.h>

//not working yet.
#define DEST_SIZE 40
int uploadScore(char* userName, int score){
	int bytes_received = 0;
	char buffer[8];

	RS232_Flush(WIFI_ReceiverFifo, WIFI_LineStatusReg);

    //send CRLF several times to let the wifi firmware match up the communication baud rate
	sendMultiChar( "\r\n",WIFI_LineStatusReg, WIFI_TransmitterFifo);
	RS232_Flush(WIFI_ReceiverFifo, WIFI_LineStatusReg);
	sendMultiChar( "\r\n",WIFI_LineStatusReg, WIFI_TransmitterFifo);
	RS232_Flush(WIFI_ReceiverFifo, WIFI_LineStatusReg);
	sendMultiChar( "\r\n",WIFI_LineStatusReg, WIFI_TransmitterFifo);
	RS232_Flush(WIFI_ReceiverFifo, WIFI_LineStatusReg);

	printf("Starting send command to wifi dongle\n");

	//send command to let the wifi dongle run the file containing uploadScore() function
	sendMessage("dofile(\"uploadScore.lua\")",WIFI_LineStatusReg, WIFI_TransmitterFifo);

    //command concatenation
    char command[DEST_SIZE] = "uploadScore(\"";
    char score_s[8];
	strcat(command, userName);
	strcat(command,"\",");
    snprintf(score_s, 8, "%d", score); // covert score from int to string 
    strcat(command,score_s);
    strcat(command,")");
    
	printf(command);

    sendMessage(command,WIFI_LineStatusReg, WIFI_TransmitterFifo);

    bytes_received = receiveBuffer(buffer, WIFI_LineStatusReg, WIFI_ReceiverFifo);
	printf(buffer);
	RS232_Flush(WIFI_ReceiverFifo, WIFI_LineStatusReg);

	for(int i=0;i<2000000;i++){};//wait for a while for database to response

	//check if we receive success status code 200. Return 1 if yes, 0 if PATCH request fail.
	bytes_received = receiveBuffer(buffer, WIFI_LineStatusReg, WIFI_ReceiverFifo);
	printf(buffer);
	if(strcmp(buffer,"200\r\n") == 0){
		return 1;
	}
	else return 0;
}

int checkReceivedStatus(char * res, volatile unsigned char* LineStatusReg, volatile unsigned char* ReceiverFifo) {
	int j;
	int bytes_received = 0;

    for(j = 0; j < 5; j++) {
    	while(!RS232_TestForReceivedData(LineStatusReg)){};
    	res[bytes_received++] = (char) getcharRS232(ReceiverFifo,LineStatusReg);
    }
	printf("Received %d bytes\n", bytes_received);
	res[bytes_received] = '\0';
	return bytes_received;
}

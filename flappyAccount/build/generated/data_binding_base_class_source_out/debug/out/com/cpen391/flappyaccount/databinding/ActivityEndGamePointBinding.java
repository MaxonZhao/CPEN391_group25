// Generated by view binder compiler. Do not edit!
package com.cpen391.flappyaccount.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.cpen391.flappyaccount.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEndGamePointBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView currentGameScore;

  @NonNull
  public final Button doneBtn;

  @NonNull
  public final ImageView profileIcon;

  @NonNull
  public final Button shareBtn;

  @NonNull
  public final Button startAgain;

  private ActivityEndGamePointBinding(@NonNull LinearLayout rootView,
      @NonNull TextView currentGameScore, @NonNull Button doneBtn, @NonNull ImageView profileIcon,
      @NonNull Button shareBtn, @NonNull Button startAgain) {
    this.rootView = rootView;
    this.currentGameScore = currentGameScore;
    this.doneBtn = doneBtn;
    this.profileIcon = profileIcon;
    this.shareBtn = shareBtn;
    this.startAgain = startAgain;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEndGamePointBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEndGamePointBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_end_game_point, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEndGamePointBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.currentGameScore;
      TextView currentGameScore = rootView.findViewById(id);
      if (currentGameScore == null) {
        break missingId;
      }

      id = R.id.done_btn;
      Button doneBtn = rootView.findViewById(id);
      if (doneBtn == null) {
        break missingId;
      }

      id = R.id.profile_icon;
      ImageView profileIcon = rootView.findViewById(id);
      if (profileIcon == null) {
        break missingId;
      }

      id = R.id.share_btn;
      Button shareBtn = rootView.findViewById(id);
      if (shareBtn == null) {
        break missingId;
      }

      id = R.id.start_again;
      Button startAgain = rootView.findViewById(id);
      if (startAgain == null) {
        break missingId;
      }

      return new ActivityEndGamePointBinding((LinearLayout) rootView, currentGameScore, doneBtn,
          profileIcon, shareBtn, startAgain);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

_____________________________________________________________________________________________________________________________
INTEGRATING THE GRAPHICS RENDERER:

Everything is packaged in "QSYS COMPONENT" folder!
Copy the contents of that folder into your Quartus project directory to use it (Further instructions on adding to QSYS found inside README file in QSYS COMPONENT folder).
You may encounter a "can't find package qsys exact 16.1 while executing "package require -exact qsys 16.1".
This can be fixed by deleting the "package require -exact qsys 16.1" file inside renderer_hw.tcl.

_____________________________________________________________________________________________________________________________
USING THE GRAPHICS RENDERER WITH C/C++ CODE:

Documentation: https://docs.google.com/document/d/1i2ljejJEDNJpxfF0QGs3n7hxUPkz36dKPm8SNM3A4yc/edit?usp=sharing

_____________________________________________________________________________________________________________________________
SAMPLE CODE:

Sample code is located in the folder "SAMPLE C CODE". The code is written in C, but it is the same code for C++.

_____________________________________________________________________________________________________________________________
TESTING THE RENDERER:

Test files for the render module is located in the "renderer" folder, along with the main render component (renderer.sv).
There are 2 test files:

render_tb.sv: to be ran on modelsim for most black box and white box tests.

render_test.sv: to be compiled in Quartus. Used for checking how textures look and to ensure final plotting outcome (black box tests).

_____________________________________________________________________________________________________________________________
OTHER FOLDERS (ONLY FOR COMPONENT DEVELOPMENT, IGNORE FOR QSYS INTEGRATION):


frame_ram_modules: includes the .v and .qip files generated by the Quartus memory wizard. To be included in the Quartus/Modelsim project for testing.

texture_rom_modules: includes the .v and .qip files generated by the Quartus memory wizard. Also includes the .mif files for initializing the memory. To be included in the Quartus/Modelsim for testing.

texture-png: contains the initial, pre-converted textures for the game.

texture-gen: contains the Python code for converting .png files to .mif formatted RGB values.

vga-core: contains the video adapter. Modified version of Altera's provided adapter. Modified by Professor Scott Hauck and Kyle Gagner from University of Washington. Link: https://class.ece.uw.edu/271/hauck2/de1/video/Video_Tutorial.pdf, https://class.ece.uw.edu/271/hauck2/de1/video/VideoFiles.zip.

OTHER FILES FOR QUARTUS: include this file into the Quartus project when testing the renderer with "render_test.sv".